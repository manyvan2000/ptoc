Object.defineProperty(exports, "__esModule", { value: true });
// angular
var core_1 = require("@angular/core");
var http_1 = require("@angular/http");
var testing_1 = require("@angular/http/testing");
var providers = [
    http_1.BaseRequestOptions,
    testing_1.MockBackend,
    { provide: http_1.Http,
        useFactory: function (backend, defaultOptions) {
            return new http_1.Http(backend, defaultOptions);
        },
        deps: [testing_1.MockBackend, http_1.BaseRequestOptions]
    }
];
/*
* For instances where you need the injector
* @returns `ReflectiveInjector`
*/
function GET_HTTP_PROVIDERS_INJECTOR(additionalProviders) {
    if (additionalProviders) {
        providers = providers.concat(additionalProviders);
    }
    return core_1.ReflectiveInjector.resolveAndCreate(providers);
}
exports.GET_HTTP_PROVIDERS_INJECTOR = GET_HTTP_PROVIDERS_INJECTOR;
/*
* For testing http services
* @returns `Array<any>`
*/
function TEST_HTTP_PROVIDERS() {
    return providers;
}
exports.TEST_HTTP_PROVIDERS = TEST_HTTP_PROVIDERS;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaHR0cC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImh0dHAudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLFVBQVU7QUFDVixzQ0FBbUQ7QUFDbkQsc0NBQTRFO0FBQzVFLGlEQUFvRDtBQUVwRCxJQUFJLFNBQVMsR0FBZTtJQUMxQix5QkFBa0I7SUFDbEIscUJBQVc7SUFDWCxFQUFFLE9BQU8sRUFBRSxXQUFJO1FBQ2IsVUFBVSxFQUFFLFVBQVUsT0FBMEIsRUFBRSxjQUFrQztZQUNsRixNQUFNLENBQUMsSUFBSSxXQUFJLENBQUMsT0FBTyxFQUFFLGNBQWMsQ0FBQyxDQUFDO1FBQzNDLENBQUM7UUFDRCxJQUFJLEVBQUUsQ0FBQyxxQkFBVyxFQUFFLHlCQUFrQixDQUFDO0tBQ3hDO0NBQ0YsQ0FBQztBQUVGOzs7RUFHRTtBQUNGLHFDQUE0QyxtQkFBZ0M7SUFFMUUsRUFBRSxDQUFDLENBQUMsbUJBQW1CLENBQUMsQ0FBQyxDQUFDO1FBQ3hCLFNBQVMsR0FBRyxTQUFTLENBQUMsTUFBTSxDQUFDLG1CQUFtQixDQUFDLENBQUM7SUFDcEQsQ0FBQztJQUVELE1BQU0sQ0FBQyx5QkFBa0IsQ0FBQyxnQkFBZ0IsQ0FBQyxTQUFTLENBQUMsQ0FBQztBQUN4RCxDQUFDO0FBUEQsa0VBT0M7QUFFRDs7O0VBR0U7QUFDRjtJQUNFLE1BQU0sQ0FBQyxTQUFTLENBQUM7QUFDbkIsQ0FBQztBQUZELGtEQUVDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gYW5ndWxhclxuaW1wb3J0IHsgUmVmbGVjdGl2ZUluamVjdG9yIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBCYXNlUmVxdWVzdE9wdGlvbnMsIENvbm5lY3Rpb25CYWNrZW5kLCBIdHRwIH0gZnJvbSAnQGFuZ3VsYXIvaHR0cCc7XG5pbXBvcnQgeyBNb2NrQmFja2VuZCB9IGZyb20gJ0Bhbmd1bGFyL2h0dHAvdGVzdGluZyc7XG5cbmxldCBwcm92aWRlcnM6IEFycmF5PGFueT4gPSBbXG4gIEJhc2VSZXF1ZXN0T3B0aW9ucyxcbiAgTW9ja0JhY2tlbmQsXG4gIHsgcHJvdmlkZTogSHR0cCxcbiAgICB1c2VGYWN0b3J5OiBmdW5jdGlvbiAoYmFja2VuZDogQ29ubmVjdGlvbkJhY2tlbmQsIGRlZmF1bHRPcHRpb25zOiBCYXNlUmVxdWVzdE9wdGlvbnMpIHtcbiAgICAgIHJldHVybiBuZXcgSHR0cChiYWNrZW5kLCBkZWZhdWx0T3B0aW9ucyk7XG4gICAgfSxcbiAgICBkZXBzOiBbTW9ja0JhY2tlbmQsIEJhc2VSZXF1ZXN0T3B0aW9uc11cbiAgfVxuXTtcblxuLypcbiogRm9yIGluc3RhbmNlcyB3aGVyZSB5b3UgbmVlZCB0aGUgaW5qZWN0b3JcbiogQHJldHVybnMgYFJlZmxlY3RpdmVJbmplY3RvcmBcbiovXG5leHBvcnQgZnVuY3Rpb24gR0VUX0hUVFBfUFJPVklERVJTX0lOSkVDVE9SKGFkZGl0aW9uYWxQcm92aWRlcnM/OiBBcnJheTxhbnk+KTogUmVmbGVjdGl2ZUluamVjdG9yIHtcblxuICBpZiAoYWRkaXRpb25hbFByb3ZpZGVycykge1xuICAgIHByb3ZpZGVycyA9IHByb3ZpZGVycy5jb25jYXQoYWRkaXRpb25hbFByb3ZpZGVycyk7XG4gIH1cblxuICByZXR1cm4gUmVmbGVjdGl2ZUluamVjdG9yLnJlc29sdmVBbmRDcmVhdGUocHJvdmlkZXJzKTtcbn1cblxuLypcbiogRm9yIHRlc3RpbmcgaHR0cCBzZXJ2aWNlc1xuKiBAcmV0dXJucyBgQXJyYXk8YW55PmBcbiovXG5leHBvcnQgZnVuY3Rpb24gVEVTVF9IVFRQX1BST1ZJREVSUygpOiBBcnJheTxhbnk+IHtcbiAgcmV0dXJuIHByb3ZpZGVycztcbn1cblxuXG5cbiJdfQ==