Object.defineProperty(exports, "__esModule", { value: true });
// app
var type_1 = require("../../core/utils/type");
// module
var category_common_1 = require("../common/category.common");
exports.ActionTypes = {
    CHANGE: type_1.type("[" + category_common_1.CATEGORY + "] Change"),
    LANG_CHANGED: type_1.type("[" + category_common_1.CATEGORY + "] Lang Changed"),
    LANG_UNSUPPORTED: type_1.type("[" + category_common_1.CATEGORY + "] Lang Unsupported")
};
/**
 * Every action is comprised of at least a type and an optional
 * payload. Expressing actions as classes enables powerful
 * type checking in reducer functions.
 *
 * See Discriminated Unions: https://www.typescriptlang.org/docs/handbook/advanced-types.html#discriminated-unions
 */
var ChangeAction = (function () {
    function ChangeAction(payload) {
        this.payload = payload;
        this.type = exports.ActionTypes.CHANGE;
    }
    return ChangeAction;
}());
exports.ChangeAction = ChangeAction;
var LangChangedAction = (function () {
    function LangChangedAction(payload) {
        this.payload = payload;
        this.type = exports.ActionTypes.LANG_CHANGED;
    }
    return LangChangedAction;
}());
exports.LangChangedAction = LangChangedAction;
var LangUnsupportedAction = (function () {
    function LangUnsupportedAction(payload) {
        this.payload = payload;
        this.type = exports.ActionTypes.LANG_UNSUPPORTED;
    }
    return LangUnsupportedAction;
}());
exports.LangUnsupportedAction = LangUnsupportedAction;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibXVsdGlsaW5ndWFsLmFjdGlvbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIm11bHRpbGluZ3VhbC5hY3Rpb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUdBLE1BQU07QUFDTiw4Q0FBNkM7QUFFN0MsU0FBUztBQUNULDZEQUFxRDtBQWdCeEMsUUFBQSxXQUFXLEdBQXlCO0lBQy9DLE1BQU0sRUFBWSxXQUFJLENBQUMsTUFBSSwwQkFBUSxhQUFVLENBQUM7SUFDOUMsWUFBWSxFQUFNLFdBQUksQ0FBQyxNQUFJLDBCQUFRLG1CQUFnQixDQUFDO0lBQ3BELGdCQUFnQixFQUFFLFdBQUksQ0FBQyxNQUFJLDBCQUFRLHVCQUFvQixDQUFDO0NBQ3pELENBQUM7QUFFRjs7Ozs7O0dBTUc7QUFDSDtJQUdFLHNCQUFtQixPQUFlO1FBQWYsWUFBTyxHQUFQLE9BQU8sQ0FBUTtRQUZsQyxTQUFJLEdBQUcsbUJBQVcsQ0FBQyxNQUFNLENBQUM7SUFFWSxDQUFDO0lBQ3pDLG1CQUFDO0FBQUQsQ0FBQyxBQUpELElBSUM7QUFKWSxvQ0FBWTtBQU16QjtJQUdFLDJCQUFtQixPQUFlO1FBQWYsWUFBTyxHQUFQLE9BQU8sQ0FBUTtRQUZsQyxTQUFJLEdBQUcsbUJBQVcsQ0FBQyxZQUFZLENBQUM7SUFFTSxDQUFDO0lBQ3pDLHdCQUFDO0FBQUQsQ0FBQyxBQUpELElBSUM7QUFKWSw4Q0FBaUI7QUFNOUI7SUFHRSwrQkFBbUIsT0FBZTtRQUFmLFlBQU8sR0FBUCxPQUFPLENBQVE7UUFGbEMsU0FBSSxHQUFHLG1CQUFXLENBQUMsZ0JBQWdCLENBQUM7SUFFRSxDQUFDO0lBQ3pDLDRCQUFDO0FBQUQsQ0FBQyxBQUpELElBSUM7QUFKWSxzREFBcUIiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBsaWJzXG5pbXBvcnQgeyBBY3Rpb24gfSBmcm9tICdAbmdyeC9zdG9yZSc7XG5cbi8vIGFwcFxuaW1wb3J0IHsgdHlwZSB9IGZyb20gJy4uLy4uL2NvcmUvdXRpbHMvdHlwZSc7XG5cbi8vIG1vZHVsZVxuaW1wb3J0IHsgQ0FURUdPUlkgfSBmcm9tICcuLi9jb21tb24vY2F0ZWdvcnkuY29tbW9uJztcblxuLyoqXG4gKiBGb3IgZWFjaCBhY3Rpb24gdHlwZSBpbiBhbiBhY3Rpb24gZ3JvdXAsIG1ha2UgYSBzaW1wbGVcbiAqIGVudW0gb2JqZWN0IGZvciBhbGwgb2YgdGhpcyBncm91cCdzIGFjdGlvbiB0eXBlcy5cbiAqXG4gKiBUaGUgJ3R5cGUnIHV0aWxpdHkgZnVuY3Rpb24gY29lcmNlcyBzdHJpbmdzIGludG8gc3RyaW5nXG4gKiBsaXRlcmFsIHR5cGVzIGFuZCBydW5zIGEgc2ltcGxlIGNoZWNrIHRvIGd1YXJhbnRlZSBhbGxcbiAqIGFjdGlvbiB0eXBlcyBpbiB0aGUgYXBwbGljYXRpb24gYXJlIHVuaXF1ZS5cbiAqL1xuZXhwb3J0IGludGVyZmFjZSBJTXVsdGlsaW5ndWFsQWN0aW9ucyB7XG4gIENIQU5HRTogc3RyaW5nO1xuICBMQU5HX0NIQU5HRUQ6IHN0cmluZztcbiAgTEFOR19VTlNVUFBPUlRFRDogc3RyaW5nO1xufVxuXG5leHBvcnQgY29uc3QgQWN0aW9uVHlwZXM6IElNdWx0aWxpbmd1YWxBY3Rpb25zID0ge1xuICBDSEFOR0U6ICAgICAgICAgICB0eXBlKGBbJHtDQVRFR09SWX1dIENoYW5nZWApLFxuICBMQU5HX0NIQU5HRUQ6ICAgICB0eXBlKGBbJHtDQVRFR09SWX1dIExhbmcgQ2hhbmdlZGApLFxuICBMQU5HX1VOU1VQUE9SVEVEOiB0eXBlKGBbJHtDQVRFR09SWX1dIExhbmcgVW5zdXBwb3J0ZWRgKVxufTtcblxuLyoqXG4gKiBFdmVyeSBhY3Rpb24gaXMgY29tcHJpc2VkIG9mIGF0IGxlYXN0IGEgdHlwZSBhbmQgYW4gb3B0aW9uYWxcbiAqIHBheWxvYWQuIEV4cHJlc3NpbmcgYWN0aW9ucyBhcyBjbGFzc2VzIGVuYWJsZXMgcG93ZXJmdWxcbiAqIHR5cGUgY2hlY2tpbmcgaW4gcmVkdWNlciBmdW5jdGlvbnMuXG4gKlxuICogU2VlIERpc2NyaW1pbmF0ZWQgVW5pb25zOiBodHRwczovL3d3dy50eXBlc2NyaXB0bGFuZy5vcmcvZG9jcy9oYW5kYm9vay9hZHZhbmNlZC10eXBlcy5odG1sI2Rpc2NyaW1pbmF0ZWQtdW5pb25zXG4gKi9cbmV4cG9ydCBjbGFzcyBDaGFuZ2VBY3Rpb24gaW1wbGVtZW50cyBBY3Rpb24ge1xuICB0eXBlID0gQWN0aW9uVHlwZXMuQ0hBTkdFO1xuXG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBwYXlsb2FkOiBzdHJpbmcpIHsgfVxufVxuXG5leHBvcnQgY2xhc3MgTGFuZ0NoYW5nZWRBY3Rpb24gaW1wbGVtZW50cyBBY3Rpb24ge1xuICB0eXBlID0gQWN0aW9uVHlwZXMuTEFOR19DSEFOR0VEO1xuXG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBwYXlsb2FkOiBzdHJpbmcpIHsgfVxufVxuXG5leHBvcnQgY2xhc3MgTGFuZ1Vuc3VwcG9ydGVkQWN0aW9uIGltcGxlbWVudHMgQWN0aW9uIHtcbiAgdHlwZSA9IEFjdGlvblR5cGVzLkxBTkdfVU5TVVBQT1JURUQ7XG5cbiAgY29uc3RydWN0b3IocHVibGljIHBheWxvYWQ6IHN0cmluZykgeyB9XG59XG5cbi8qKlxuICogRXhwb3J0IGEgdHlwZSBhbGlhcyBvZiBhbGwgYWN0aW9ucyBpbiB0aGlzIGFjdGlvbiBncm91cFxuICogc28gdGhhdCByZWR1Y2VycyBjYW4gZWFzaWx5IGNvbXBvc2UgYWN0aW9uIHR5cGVzXG4gKi9cbmV4cG9ydCB0eXBlIEFjdGlvbnNcbiAgPSBDaGFuZ2VBY3Rpb25cbiAgfCBMYW5nQ2hhbmdlZEFjdGlvblxuICB8IExhbmdVbnN1cHBvcnRlZEFjdGlvbjtcbiJdfQ==