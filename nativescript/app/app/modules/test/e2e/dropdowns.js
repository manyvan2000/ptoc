Object.defineProperty(exports, "__esModule", { value: true });
/**
* Usage: selectDropdownByNumber ( selector, index)
* selector : select element
* index : index in the dropdown, 1 base.
*/
function selectDropdownByNumber(selector, index, milliseconds) {
    element(by.css(selector)).all(by.tagName('option'))
        .then(function (options) {
        options[index].click();
    });
    if (typeof milliseconds !== 'undefined') {
        browser.sleep(milliseconds);
    }
}
exports.selectDropdownByNumber = selectDropdownByNumber;
/**
* Usage: selectDropdownByValue (selector, item)
* selector : select element
* item : option(s) in the dropdown.
*/
function selectDropdownByValue(selector, item, milliseconds) {
    // var desiredOption: any;
    element(by.css(selector)).sendKeys(item);
    if (typeof milliseconds !== 'undefined') {
        browser.sleep(milliseconds);
    }
}
exports.selectDropdownByValue = selectDropdownByValue;
/**
* Usage: selectRandomDropdownReturnText ( selector, milliseconds)
* selector : select random element
* index : wait time to select value for drop down.
*/
function selectRandomDropdownReturnText(selector, milliseconds) {
    element(by.css(selector)).all(by.tagName('option')).then(function (options) {
        var randomNumber = Math.floor((Math.random() * options.length));
        options[randomNumber].click();
        return options[randomNumber].getText().then(function (text) {
            return text;
        });
    });
    if (typeof milliseconds !== 'undefined') {
        browser.sleep(milliseconds);
    }
}
exports.selectRandomDropdownReturnText = selectRandomDropdownReturnText;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJvcGRvd25zLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiZHJvcGRvd25zLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFFQTs7OztFQUlFO0FBQ0YsZ0NBQXVDLFFBQWdCLEVBQUUsS0FBYSxFQUFFLFlBQW9CO0lBQzFGLE9BQU8sQ0FBQyxFQUFFLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUM7U0FDaEQsSUFBSSxDQUFDLFVBQVMsT0FBWTtRQUN6QixPQUFPLENBQUMsS0FBSyxDQUFDLENBQUMsS0FBSyxFQUFFLENBQUM7SUFDekIsQ0FBQyxDQUFDLENBQUM7SUFDTCxFQUFFLENBQUMsQ0FBQyxPQUFPLFlBQVksS0FBSyxXQUFXLENBQUMsQ0FBQyxDQUFDO1FBQ3hDLE9BQU8sQ0FBQyxLQUFLLENBQUMsWUFBWSxDQUFDLENBQUM7SUFDOUIsQ0FBQztBQUNILENBQUM7QUFSRCx3REFRQztBQUdEOzs7O0VBSUU7QUFDRiwrQkFBc0MsUUFBZ0IsRUFBRSxJQUFZLEVBQUUsWUFBb0I7SUFDeEYsMEJBQTBCO0lBQzFCLE9BQU8sQ0FBQyxFQUFFLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ3pDLEVBQUUsQ0FBQyxDQUFDLE9BQU8sWUFBWSxLQUFLLFdBQVcsQ0FBQyxDQUFDLENBQUM7UUFDeEMsT0FBTyxDQUFDLEtBQUssQ0FBQyxZQUFZLENBQUMsQ0FBQztJQUM5QixDQUFDO0FBQ0gsQ0FBQztBQU5ELHNEQU1DO0FBRUQ7Ozs7RUFJRTtBQUNGLHdDQUErQyxRQUFnQixFQUFFLFlBQW9CO0lBQ25GLE9BQU8sQ0FBQyxFQUFFLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsVUFBUyxPQUFZO1FBQzVFLElBQUksWUFBWSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLEdBQUcsT0FBTyxDQUFDLE1BQU0sQ0FDNUQsQ0FBQyxDQUFDO1FBQ0gsT0FBTyxDQUFDLFlBQVksQ0FBQyxDQUFDLEtBQUssRUFBRSxDQUFDO1FBQzlCLE1BQU0sQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDLENBQUMsT0FBTyxFQUFFLENBQUMsSUFBSSxDQUFDLFVBQVMsSUFBWTtZQUMvRCxNQUFNLENBQUMsSUFBSSxDQUFDO1FBQ2QsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDLENBQUMsQ0FBQztJQUNILEVBQUUsQ0FBQyxDQUFDLE9BQU8sWUFBWSxLQUFLLFdBQVcsQ0FBQyxDQUFDLENBQUM7UUFDeEMsT0FBTyxDQUFDLEtBQUssQ0FBQyxZQUFZLENBQUMsQ0FBQztJQUM5QixDQUFDO0FBQ0gsQ0FBQztBQVpELHdFQVlDIiwic291cmNlc0NvbnRlbnQiOlsiZGVjbGFyZSB2YXIgYnJvd3NlcjogYW55LCBlbGVtZW50OiBhbnksIGJ5OiBhbnk7XHJcblxyXG4vKipcclxuKiBVc2FnZTogc2VsZWN0RHJvcGRvd25CeU51bWJlciAoIHNlbGVjdG9yLCBpbmRleClcclxuKiBzZWxlY3RvciA6IHNlbGVjdCBlbGVtZW50XHJcbiogaW5kZXggOiBpbmRleCBpbiB0aGUgZHJvcGRvd24sIDEgYmFzZS5cclxuKi9cclxuZXhwb3J0IGZ1bmN0aW9uIHNlbGVjdERyb3Bkb3duQnlOdW1iZXIoc2VsZWN0b3I6IHN0cmluZywgaW5kZXg6IG51bWJlciwgbWlsbGlzZWNvbmRzOiBudW1iZXIpIHtcclxuICBlbGVtZW50KGJ5LmNzcyhzZWxlY3RvcikpLmFsbChieS50YWdOYW1lKCdvcHRpb24nKSlcclxuICAgIC50aGVuKGZ1bmN0aW9uKG9wdGlvbnM6IGFueSkge1xyXG4gICAgICBvcHRpb25zW2luZGV4XS5jbGljaygpO1xyXG4gICAgfSk7XHJcbiAgaWYgKHR5cGVvZiBtaWxsaXNlY29uZHMgIT09ICd1bmRlZmluZWQnKSB7XHJcbiAgICBicm93c2VyLnNsZWVwKG1pbGxpc2Vjb25kcyk7XHJcbiAgfVxyXG59XHJcblxyXG5cclxuLyoqXHJcbiogVXNhZ2U6IHNlbGVjdERyb3Bkb3duQnlWYWx1ZSAoc2VsZWN0b3IsIGl0ZW0pXHJcbiogc2VsZWN0b3IgOiBzZWxlY3QgZWxlbWVudFxyXG4qIGl0ZW0gOiBvcHRpb24ocykgaW4gdGhlIGRyb3Bkb3duLlxyXG4qL1xyXG5leHBvcnQgZnVuY3Rpb24gc2VsZWN0RHJvcGRvd25CeVZhbHVlKHNlbGVjdG9yOiBzdHJpbmcsIGl0ZW06IHN0cmluZywgbWlsbGlzZWNvbmRzOiBudW1iZXIpIHtcclxuICAvLyB2YXIgZGVzaXJlZE9wdGlvbjogYW55O1xyXG4gIGVsZW1lbnQoYnkuY3NzKHNlbGVjdG9yKSkuc2VuZEtleXMoaXRlbSk7XHJcbiAgaWYgKHR5cGVvZiBtaWxsaXNlY29uZHMgIT09ICd1bmRlZmluZWQnKSB7XHJcbiAgICBicm93c2VyLnNsZWVwKG1pbGxpc2Vjb25kcyk7XHJcbiAgfVxyXG59XHJcblxyXG4vKipcclxuKiBVc2FnZTogc2VsZWN0UmFuZG9tRHJvcGRvd25SZXR1cm5UZXh0ICggc2VsZWN0b3IsIG1pbGxpc2Vjb25kcylcclxuKiBzZWxlY3RvciA6IHNlbGVjdCByYW5kb20gZWxlbWVudFxyXG4qIGluZGV4IDogd2FpdCB0aW1lIHRvIHNlbGVjdCB2YWx1ZSBmb3IgZHJvcCBkb3duLlxyXG4qL1xyXG5leHBvcnQgZnVuY3Rpb24gc2VsZWN0UmFuZG9tRHJvcGRvd25SZXR1cm5UZXh0KHNlbGVjdG9yOiBzdHJpbmcsIG1pbGxpc2Vjb25kczogbnVtYmVyKSB7XHJcbiAgZWxlbWVudChieS5jc3Moc2VsZWN0b3IpKS5hbGwoYnkudGFnTmFtZSgnb3B0aW9uJykpLnRoZW4oZnVuY3Rpb24ob3B0aW9uczogYW55KSB7XHJcbiAgICB2YXIgcmFuZG9tTnVtYmVyID0gTWF0aC5mbG9vcigoTWF0aC5yYW5kb20oKSAqIG9wdGlvbnMubGVuZ3RoXHJcbiAgICApKTtcclxuICAgIG9wdGlvbnNbcmFuZG9tTnVtYmVyXS5jbGljaygpO1xyXG4gICAgcmV0dXJuIG9wdGlvbnNbcmFuZG9tTnVtYmVyXS5nZXRUZXh0KCkudGhlbihmdW5jdGlvbih0ZXh0OiBzdHJpbmcpIHtcclxuICAgICAgcmV0dXJuIHRleHQ7XHJcbiAgICB9KTtcclxuICB9KTtcclxuICBpZiAodHlwZW9mIG1pbGxpc2Vjb25kcyAhPT0gJ3VuZGVmaW5lZCcpIHtcclxuICAgIGJyb3dzZXIuc2xlZXAobWlsbGlzZWNvbmRzKTtcclxuICB9XHJcbn1cclxuIl19